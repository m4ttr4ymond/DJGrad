//
// Generated file, do not edit! Created by nedtool 5.7 from gradient_simple/GradientSimpleMessage.msg.
//

#ifndef __VEINS_GRADIENTSIMPLEMESSAGE_M_H
#define __VEINS_GRADIENTSIMPLEMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace veins {

class GradientSimpleMessage;
} // namespace veins

#include "veins/base/utils/Coord_m.h" // import veins.base.utils.Coord

#include "veins/modules/messages/BaseFrame1609_4_m.h" // import veins.modules.messages.BaseFrame1609_4

#include "veins/base/utils/SimpleAddress_m.h" // import veins.base.utils.SimpleAddress


namespace veins {

/**
 * Class generated from <tt>gradient_simple/GradientSimpleMessage.msg:29</tt> by nedtool.
 * <pre>
 * packet GradientSimpleMessage extends BaseFrame1609_4
 * {
 *     int gradientHash;
 *     LAddress::L2Type senderAddress = -1;
 * }
 * </pre>
 */
class GradientSimpleMessage : public ::veins::BaseFrame1609_4
{
  protected:
    int gradientHash = 0;
    LAddress::L2Type senderAddress = -1;

  private:
    void copy(const GradientSimpleMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const GradientSimpleMessage&);

  public:
    GradientSimpleMessage(const char *name=nullptr, short kind=0);
    GradientSimpleMessage(const GradientSimpleMessage& other);
    virtual ~GradientSimpleMessage();
    GradientSimpleMessage& operator=(const GradientSimpleMessage& other);
    virtual GradientSimpleMessage *dup() const override {return new GradientSimpleMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getGradientHash() const;
    virtual void setGradientHash(int gradientHash);
    virtual const LAddress::L2Type& getSenderAddress() const;
    virtual LAddress::L2Type& getSenderAddressForUpdate() { return const_cast<LAddress::L2Type&>(const_cast<GradientSimpleMessage*>(this)->getSenderAddress());}
    virtual void setSenderAddress(const LAddress::L2Type& senderAddress);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const GradientSimpleMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, GradientSimpleMessage& obj) {obj.parsimUnpack(b);}

} // namespace veins

#endif // ifndef __VEINS_GRADIENTSIMPLEMESSAGE_M_H

